#!/bin/bash

#载入配置
. $dir"/.config"

#载入模块
. $dir"/module/other"
. $dir"/module/web"
. $dir"/module/control"
. $dir"/module/menus"
. $dir"/module/list"
. $dir"/module/install"
. $dir"/module/group"


if [[ $release == "debian" ]]||[[ $release == "ubuntu" ]];then #debian特权！
	Java8bin=$(echo -e `update-alternatives --list java`|sed 's/ /\n/g'|grep 8)
	Java11bin=$(echo -e `update-alternatives --list java`|sed 's/ /\n/g'|grep 11)
	Java16bin=$(echo -e `update-alternatives --list java`|sed 's/ /\n/g'|grep 16)
	[ ! $Java8bin ] && Java8bin="java"
	[ ! $Java11bin ] && Java11bin="java"
	[ ! $Java16bin ] && Java16bin="java"
fi

Server_StartCommand(){ #服务器启动命令
Server_P1=" -XX:+UseG1GC -XX:+ParallelRefProcEnabled \
-XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC \
-XX:-OmitStackTraceInFastThrow -XX:+AlwaysPreTouch -XX:G1MaxNewSizePercent=40 \
-XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5"
Server_P2=" -XX:G1MixedGCCountTarget=8 -XX:InitiatingHeapOccupancyPercent=15 \
-XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 \
-XX:SurvivorRatio=32 -XX:MaxTenuringThreshold=1 -Dusing.aikars.flags=true -Daikars.new.flags=true \
-server -Xms"$Server_memMin" -Xmx"$Server_memMax" \
-jar "$Server_Path"/"$Server_Name"/"$Server_Jar" nogui "
if [[ $Server_Java == "8" ]];then
	Server_Parameter="$Java8bin $Server_pre$Server_P1$Server_P2$Server_suf"
elif [[ $Server_Java == "11" ]];then
	Server_Parameter="$Java11bin $Server_pre$Server_P1$Server_P2$Server_suf"
elif [[ $Server_Java == "16" ]];then
	Server_Parameter="$Java16bin $Server_pre$Server_P1$Server_P2$Server_suf"
else
	Server_Parameter="java $Server_pre$Server_P1$Server_P2$Server_suf"
fi
}

check_sys(){
	if [[ -f /etc/redhat-release ]]; then
		release="centos"
	elif cat /etc/issue | grep -q -E -i "debian"; then
		release="debian"
	elif cat /etc/issue | grep -q -E -i "ubuntu"; then
		release="ubuntu"
	elif cat /etc/issue | grep -q -E -i "centos|red hat|redhat"; then
		release="centos"
	elif cat /proc/version | grep -q -E -i "debian"; then
		release="debian"
	elif cat /proc/version | grep -q -E -i "ubuntu"; then
		release="ubuntu"
	elif cat /proc/version | grep -q -E -i "centos|red hat|redhat"; then
		release="centos"
    fi
}

#screen用户目录
run="/var/run/screen/S-"$User

#字符颜色
Green_font="\033[32m"
Yellow_font="\033[33m"
Red_font="\033[31m"
Black_font="\033[30m"
Font_suffix="\033[0m"
Info="[${Green_font}Info${Font_suffix}] "
Error="[${Red_font}Error${Font_suffix}] "
Powered="${Black_font}Powered by Becod${Font_suffix}"

list(){
alist=`sed 's/#/\n#/g' $dir"/.config"|sed '/#/d'|grep '(){'|sed 's/(){//g'`
if [[ $Group == "true" ]];then
	glist=`echo "$alist"|grep $Server_Name`
fi
list=`echo "$alist"|grep -v '\.'`
}

Server_Action(){
Server_StartCommand
case "$action" in
	start)Server_Start;;
	stop)Server_Stop;;
	status)Server_Status;;
	reload)Server_Restart;;
	restart)Server_Restart;;
	console)Console;;
	p-single)Permission_Check;;
	list)no_function;;
	*)echo -e "${Error}参数错误\c"
	if [[ $UseMenu -eq "1" ]];then
		sleep 1
		MainMenu
	else
		echo "，请使用：{start|stop|restart|reload|status}"
	fi;;
esac
}

no_function(){ #功能未定义
echo -e "${Error}功能未实现！"
if [[ $UseMenu -eq "1" ]];then
	sleep 1
	MainMenu
fi
}

logo(){
echo -e "--------------------------------------------
   __  ___     _     __  ______________  ___
  /  |/  /_ __(_)___/  |/  / ___/ __/  |/  /
 / /|_/ / // / / __/ /|_/ / /___\ \/ /|_/ / 
/_/  /_/\_,_/_/_/ /_/  /_/\___/___/_/  /_/ 

 Copyright 2021 Becod_ All rights reserved.
--------------------------------------------"
}

init(){ #初始化检测
if [ ! -d "$run" ]; then
	mkdir "$run" && chmod 700 "$run" && chown -R "$User" "$run"
fi
if [ ! -d "/var/run/screen/S-root" ]; then
	mkdir "/var/run/screen/S-root"
fi
if [ -f $dir"/module/FirstRun" ]; then
	install
fi
}

trap "" HUP INT TSTP