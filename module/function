#!/bin/bash

#载入配置
. $dir"/.config"

#载入模块
. $dir"/module/other"
. $dir"/module/web"
. $dir"/module/control"
. $dir"/module/menus"
. $dir"/module/list"
. $dir"/module/install"
. $dir"/module/group"
. $dir"/module/java"

#screen用户目录
run="/var/run/screen/S-"$User

#字符颜色
Green_font="\033[32m"
Yellow_font="\033[33m"
Red_font="\033[31m"
Black_font="\033[30m"
Font_suffix="\033[0m"
Info="[${Green_font}Info${Font_suffix}] "
Error="[${Red_font}Error${Font_suffix}] "
Powered="${Black_font}Powered by Becod${Font_suffix}"

if [[ -f /etc/redhat-release ]]; then
	release="centos"
elif cat /etc/issue | grep -q -E -i "debian"; then
	release="debian"
elif cat /etc/issue | grep -q -E -i "ubuntu"; then
	release="ubuntu"
elif cat /etc/issue | grep -q -E -i "centos|red hat|redhat"; then
	release="centos"
elif cat /proc/version | grep -q -E -i "debian"; then
	release="debian"
elif cat /proc/version | grep -q -E -i "ubuntu"; then
	release="ubuntu"
elif cat /proc/version | grep -q -E -i "centos|red hat|redhat"; then
	release="centos"
fi

if [ -z $Server_memMin_Default ];then Server_memMin_Default="512m";fi
if [ -z $Server_memMax_Default ];then Server_memMax_Default="512m";fi
if [ -z $check_time_out ];then check_time_out="1200";fi
if [ -z $WebPort ];then WebPort=8080;fi

Server_StartCommand(){ #服务器启动命令
if [[ $release == "debian" ]]||[[ $release == "ubuntu" ]];then #debian特权！
	Server_Java_select
fi
if [[ $Velocity_MysqlFix == "true" ]];then
	if [ ! -x $dir"/module/mysql-connector.jar" ]; then
		echo -e "${Info}正在获取依赖库"
		wget -qO $dir"/module/mysql-connector.jar" "https://maven.aliyun.com/repository/public/mysql/mysql-connector-java/8.0.26/mysql-connector-java-8.0.26.jar"
	fi
	Server_Classpath=$dir"/module/mysql-connector.jar"
	Server_MainClass="com.velocitypowered.proxy.Velocity"
fi
Server_P1=" -XX:+UseG1GC -XX:+ParallelRefProcEnabled \
-XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC \
-XX:-OmitStackTraceInFastThrow -XX:+AlwaysPreTouch -XX:G1MaxNewSizePercent=40 \
-XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5"
Server_P2=" -XX:G1MixedGCCountTarget=8 -XX:InitiatingHeapOccupancyPercent=15 \
-XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 \
-XX:SurvivorRatio=32 -XX:MaxTenuringThreshold=1 -Dusing.aikars.flags=true -Daikars.new.flags=true \
-server -Xms"$Server_memMin" -Xmx"$Server_memMax" "
if [[ -n $Server_Classpath ]]&&[[ -n $Server_MainClass ]];then
	Server_P3="-cp '"$Server_Path"/"$Server_Name"/"$Server_Jar":"$Server_Classpath"' "$Server_MainClass" nogui "
else
	Server_P3="-jar "$Server_Path"/"$Server_Name"/"$Server_Jar" nogui "
fi
Server_Parameter="$Java $Server_pre$Server_P1$Server_P2$Server_P3$Server_suf"
}

Server_Function_Check(){
	if [ -z $Server_Jar ]; then
		echo -e $Error$Server_Name"的Server_Jar参数为空或无法解析，启动失败！";exit
	fi
	if [ -z $Server_memMin ]; then
		echo -e $Error$Server_Name"的Server_memMin参数为空或无法解析，正在使用默认值"$Server_memMin_Default"启动！";exit
	fi
	if [ -z $Server_memMax ]; then
		echo -e $Error$Server_Name"的Server_memMax参数为空或无法解析，正在使用默认值"$Server_memMax_Default"启动！";exit
	fi
	if [ -z $Server_Path ]; then
		echo -e $Error"Server_Path参数为空或无法解析，启动失败！";exit
	fi
	if [ -z $User ]; then
		echo -e $Error"User参数为空或无法解析，启动失败！";exit
	fi
	if [ ! -d $Server_Path"/"$Server_Name ]; then
		echo -e $Error$Server_Name"的服务端路径错误或不存在，启动失败！";exit
	fi
	if [ -f $Server_Path"/"$Server_Name ]; then
		echo -e $Error$Server_Name"的服务端启动文件错误或不存在，启动失败！";exit
	fi
}

list(){
alist=`sed 's/#/\n#/g' $dir"/.config"|sed '/#/d'|grep '(){'|sed 's/(){//g'`
if [[ $Group == "true" ]];then
	glist=`echo "$alist"|grep $Server_Name`
fi
list=`echo "$alist"|grep -v '\.'`
}

Server_Action(){
Server_StartCommand
Server_Function_Check
chown -R $User $Server_Path"/"$Server_Name
case "$action" in
	start)Server_Start;;
	stop)Server_Stop;;
	status)Server_Status;;
	reload)Server_Restart;;
	restart)Server_Restart;;
	console)Console;;
	p-single)Permission_Check;;
	list)no_function;;
	*)echo -e "${Error}参数错误\c"
	if [[ $UseMenu -eq "1" ]];then
		sleep 1
		MainMenu
	else
		echo "，请使用：{start|stop|restart|reload|status}"
	fi;;
esac
}

no_function(){ #功能未定义
echo -e "${Error}功能未实现！"
if [[ $UseMenu -eq "1" ]];then
	sleep 1
	MainMenu
fi
}

logo(){
echo -e "--------------------------------------------
   __  ___     _     __  ______________  ___
  /  |/  /_ __(_)___/  |/  / ___/ __/  |/  /
 / /|_/ / // / / __/ /|_/ / /___\ \/ /|_/ / 
/_/  /_/\_,_/_/_/ /_/  /_/\___/___/_/  /_/ 

 Copyright 2021 Becod_ All rights reserved.
--------------------------------------------"
}

check_ttyd(){
	if [ ! -x $dir"/module/ttyd" ]; then
		wget -O $dir"/module/ttyd" `curl -s https://api.github.com/repos/tsl0922/ttyd/releases | grep browser_download_url | grep 'x86_64' | head -n 1 | cut -d '"' -f 4`
		chmod +x $dir"/module/ttyd"
	fi
}

init(){ #初始化检测
if [ ! -d "$run" ]; then
	mkdir "$run" && chmod 700 "$run" && chown -R "$User" "$run"
fi
if [ ! -d "/var/run/screen/S-root" ]; then
	mkdir "/var/run/screen/S-root"
fi
if [ -f $dir"/module/FirstRun" ]; then
	install
fi
}

#trap "" HUP INT TSTP